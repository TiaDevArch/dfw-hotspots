---
import Layout from '../layouts/Layout.astro';
import '../styles/style.css';

const apiKey = import.meta.env.PUBLIC_AIRTABLE_SPECIAL_EVENTS_KEY;
const baseId = import.meta.env.PUBLIC_AIRTABLE_SPECIAL_EVENTS_BASE;
const tableName = import.meta.env.PUBLIC_AIRTABLE_SPECIAL_EVENTS_TABLE;

let upcomingEvents = [];
let pastEvents = [];

try {
  const res = await fetch(`https://api.airtable.com/v0/${baseId}/${tableName}?view=Grid%20view`, {
    headers: { Authorization: `Bearer ${apiKey}` },
  });

  const json = await res.json();
  if (!json.records) console.error("‚ö†Ô∏è Airtable response missing 'records':", json);

  const allEvents = (json.records || [])
    .map((r) => r.fields)
    .filter((e) => e["Event Date"]);

  const today = new Date();
  today.setHours(0, 0, 0, 0);

  upcomingEvents = allEvents.filter((e) => new Date(e["Event Date"]) >= today);
  pastEvents = allEvents.filter((e) => new Date(e["Event Date"]) < today);

  upcomingEvents.sort((a, b) => new Date(a["Event Date"]) - new Date(b["Event Date"]));
  pastEvents.sort((a, b) => new Date(b["Event Date"]) - new Date(a["Event Date"]));
} catch (error) {
  console.error("‚ùå Failed to fetch Airtable data:", error);
}
---

<Layout title="DFW Scene | Special Events in Dallas-Fort Worth">

<header class="dfw-banner" role="banner">
  <a class="dfw-banner__logo" href="/" aria-label="DFW Scene ‚Äî Home">
    <img
      src="/Logo-DFWScene-s.png"
      srcset="/Logo-DFWScene-s.png 1x, /Logo-DFWScene.png 2x"
      alt="DFW Scene logo"
      width="256" height="256" alt="DFW Scene ‚Äì Explore the best restaurants, bars, lounges, brunch spots, and nightlife venues across Dallas-Fort Worth" title="DFW Scene"/>
  </a>
</header>

<!-- Centered site nav -->
<nav class="dfw-nav dfw-nav--underline is-caps" aria-label="Primary">
  <ul>
    <li><a href="/">Venues</a></li>
    <li><a href="/specialevents" aria-current="page">Special Events</a></li>
  </ul>
</nav>

<p class="dfw-nav-note">
  <em>Explore special events happening around Dallas-Fort Worth!</em>
</p>

<!-- UPCOMING EVENTS -->
<h3 class="section-heading">Upcoming Events</h3>

<div id="special-event-container" class="card-grid-wrapper">
  <div class="card-grid">
    {upcomingEvents.map((event, index) => (
      <div
        class="card"
        data-index={index}
        data-city={(event["City"] || "").toLowerCase()}
        data-area={(event["Area"] || "").toLowerCase()}
        data-tags={(event["Tags"] || []).join(",").toLowerCase()}
      >
        <h2>{event["Event Name"]}</h2>
        {event.Description && <p>{event.Description}</p>}
        <div class="meta">
          {event.Venue && <div class="meta-line"><strong>Venue:</strong> {event.Venue}</div>}
          {event.City && <div class="meta-line"><strong>City:</strong> {event.City}</div>}
          {event.Area && <div class="meta-line"><strong>Area:</strong> {event.Area}</div>}
        </div>
        {event["Event Date"] && (
          <p class="when-to-go"><i>{event["Event Date"]}</i></p>
        )}
        {event["Event Page URL"] && (
          <div class="links">
            <a href={event["Event Page URL"]} target="_blank" rel="noopener noreferrer">
              More Info
            </a>
          </div>
        )}
      </div>
    ))}
  </div>
</div>

<!-- PAST EVENTS -->
<h3 class="section-heading">Past Events</h3>
<div class="card-grid-wrapper">
  <div class="card-grid compact">
    {pastEvents.map((event, index) => (
      <div
        class="card past-event"
        data-index={index}
        data-city={(event["City"] || "").toLowerCase()}
        data-area={(event["Area"] || "").toLowerCase()}
        data-tags={(event["Tags"] || []).join(",").toLowerCase()}
      >
        <h2>{event["Event Name"]}</h2>
        {event.Description && <p>{event.Description}</p>}
        <div class="meta">
          {event.Venue && <div class="meta-line"><strong>Venue:</strong> {event.Venue}</div>}
          {event.City && <div class="meta-line"><strong>City:</strong> {event.City}</div>}
          {event.Area && <div class="meta-line"><strong>Area:</strong> {event.Area}</div>}
        </div>
        {event["Event Date"] && (
          <p class="when-to-go"><i>{event["Event Date"]}</i></p>
        )}
        {event["Event Page URL"] && (
          <div class="links">
            <a href={event["Event Page URL"]} target="_blank" rel="noopener noreferrer">
              More Info
            </a>
          </div>
        )}
      </div>
    ))}
  </div>
</div>


<!-- Footer -->

<footer style="margin-top: 4rem; padding: 2rem 1rem; text-align: center; font-size: 0.8rem; color: #555;">
<!-- Buy Me a Book button -->
<div style="transform: scale(0.5); transform-origin: top center;">
  <script
    is:inline
    async
    src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js"
    data-name="bmc-button"
    data-slug="tiaross"
    data-color="#BD5FFF"
    data-emoji="üìñ"
    data-font="Bree"
    data-text="Buy me a book"
    data-outline-color="#000000"
    data-font-color="#ffffff"
    data-coffee-color="#FFDD00"
  ></script>
</div>


     <p>üìç DFW Scene<br />
     <em>Outings That Actually Hit. Find Your Scene.</em><br />
      <a href="/about">About</a></p>
    </footer>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const searchInput = document.createElement("input");
  searchInput.type = "text";
  searchInput.placeholder = "Search events by name, venue, or description...";
  searchInput.style.cssText = `
    width: 100%;
    padding: 0.75rem;
    margin: 1rem 0;
    border-radius: 8px;
    border: 1px solid #ccc;
    font-size: 1rem;
  `;

  // Insert search bar after the header
  document.querySelector('.about-header').after(searchInput);

  searchInput.addEventListener('input', (e) => {
    const term = e.target.value.toLowerCase();
    document.querySelectorAll('#special-event-container .card').forEach(card => {
      const text = card.textContent.toLowerCase();
      card.style.display = text.includes(term) ? 'block' : 'none';
    });
  });
});
</script>
</Layout>