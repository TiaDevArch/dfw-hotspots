---
import venues from '../data/venues.json';
---

<html lang="en">
  <head>
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>DFW Hotspots | Best Places to Go Out in Dallas-Fort Worth</title>
  <meta name="description" content="Explore the best restaurants, bars, lounges, brunch spots, and nightlife venues across Dallas-Fort Worth with curated vibes, audience, and atmospheres." />
  <meta name="keywords" content="Dallas nightlife, DFW hotspots, brunch in Dallas, date spots DFW, live music Dallas, black-owned venues Dallas, chill bars Fort Worth, where to go out in DFW" />
  <meta name="author" content="Tia Ross" />

  <!-- Open Graph for social sharing -->
  <meta property="og:title" content="DFW Hotspot Vibes" />
  <meta property="og:description" content="Find your vibe in Dallas-Fort Worth ‚Äî Brunch, date nights, happy hours, lounges, Black-owned gems and more." />
  <meta property="og:image" content="https://github.com/TiaDevArch/dfw-hotspots/blob/main/src/assets/Logo-DFWHotspots-s.png" />
  <meta property="og:url" content="https://dfw-hotspot-vibes.netlify.app/" />
  <meta property="og:type" content="website" />

</head>

    <title>DFW Hotspots</title>
 <style>
  body {
    font-family: Calibri, sans-serif;
    padding: 2rem;
    background: #f9f9f9;
    margin: 0;
  }

  h1 {
    text-align: center;
    color: #333;
    margin-bottom: 1rem;
  }

  input[type="text"] {
    width: 100%;
    padding: 0.75rem;
    font-size: 1rem;
    margin: 1rem 0;
    border-radius: 8px;
    border: 1px solid #ccc;
  }

  .filters h3 {
    margin-top: 2rem;
    font-size: 1.1rem;
    color: #444;
  }

  .filters div {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .filters button {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    border: 1px solid #ccc;
    background: #eee;
    cursor: pointer;
    font-size: 0.9rem;
  }

.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: 1.5rem;
  margin-top: 2rem;
}
.card-grid-wrapper {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

  .card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .card h2 {
    margin: 0 0 0.5rem 0;
    font-size: 1.2rem;
    color: #222;
  }

  .meta {
    font-size: 0.9rem;
    color: #666;
  }

  .cost {
    font-weight: bold;
    margin-top: 0.5rem;
  }

  .links a {
    font-size: 0.85rem;
    margin-right: 10px;
    color: #0077cc;
    text-decoration: none;
  }

  .cta-buttons {
    margin-top: 3rem;
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
    text-align: center;
  }

  .cta-buttons a {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    background-color: #524776;
    color: white;
    text-decoration: none;
    border-radius: 25px;
    font-weight: bold;
    box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    transition: background-color 0.3s ease;
  }

  .cta-buttons a:hover {
    background-color: #3f3861;
  }

  footer {
    margin-top: 4rem;
    padding: 2rem 1rem;
    text-align: center;
    font-size: 0.9rem;
    color: #555;
  }

  footer img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-top: 0.5rem;
  }

  @media screen and (max-width: 600px) {
    .filters div {
      flex-direction: column;
    }

    .card-grid {
      grid-template-columns: 1fr;
    }

    .cta-buttons {
      flex-direction: column;
    }

    .cta-buttons a {
      width: 100%;
      max-width: 300px;
    }

    input[type="text"] {
      font-size: 0.95rem;
    }
  }
</style>
  </head>
  <body>
<img src="https://github.com/TiaDevArch/dfw-hotspots/blob/main/src/assets/Logo-DFWHotspots-s.png">
    <h1>DFW Hotspots</h1>

    <input
      type="text"
      id="searchInput"
      placeholder="Search venues, cities, categories..."
      style="width: 100%; padding: 0.75rem; font-size: 1rem; margin-top: 1rem; border-radius: 8px; border: 1px solid #ccc;"
    />


    <h3>Filters</h3>
<button onclick="toggleFilters()" style="margin-bottom: 1rem;">üîç Filter Options</button>
<div id="filterPanel" style="display: none; border: 1px solid #ddd; padding: 1rem; border-radius: 12px; background: #fff;">


<h3>Filter by Category</h3>
<!-- üîñ Category Filters -->
<div id="categoryFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Brunch", "Cultural Event", "Date Spot", "Day Party", "Festival", "Foodie Event", "Free Event", "Happy Hour", "Live Music", "Market/Pop-Up", "Mixed-Use", "Networking Mixer", "Nightlife/Lounge", "Outdoor Event", "Restaurant/Bar", "Rooftop Bar", "Sports Bar", "Speakeasy", "Theater/Spoken Word", "Wellness/Fitness"].map((tag) => (
        <button
          class="category-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>


<h3>Filter by Vibe</h3>
    <!-- üîñ Vibe Filters -->
    <div id="vibeFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Bougie", "Chill Vibes", "Classy", "Date Night", "Grown & Sexy", "Laid Back", "Lit", "Networking", "Romantic", "Trendy", "Turn Up", "Black-Owned"].map((tag) => (
        <button
          class="vibe-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>

<h3>Filter by Audience</h3>
    <!-- üë• Audience Filters -->
    <div id="audienceFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Singles", "Couples", "Small Groups"].map((tag) => (
        <button
          class="audience-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>


<h3>Filter by Atmosphere</h3>
    <!-- üéµ Atmosphere Filters -->
    <div id="atmosphereFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Dancing", "Game Night", "Comedy", "Hookah", "Live Band", "Live DJ", "Outdoors", "Patio", "Rooftop", "Karaoke"].map((tag) => (
        <button
          class="atmosphere-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>

    <!-- üïí When to Go Filters -->
    <div id="whenFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Brunch", "Happy Hour", "Late Night", "Weekend", "Daytime", "Evening"].map((tag) => (
        <button
          class="when-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>



</div>

<script>
  function toggleFilters() {
    const panel = document.getElementById("filterPanel");
    panel.style.display = panel.style.display === "none" ? "block" : "none";
  }
</script>



    <div class="card-grid" id="venueList">
      {venues.map((venue, index) => (
        <div
          class="card"
          data-index={index}
          data-vibes={(venue.Vibe ?? "").toLowerCase()}
          data-audience={(venue.Audience ?? "").toLowerCase()}
          data-atmosphere={(venue.Atmosphere ?? "").toLowerCase()}
          data-whentogo={(venue["When to Go"] ?? "").toLowerCase()}
 	  data-category={(venue.Category ?? "").toLowerCase()}
        >
          <h2>{venue.Venue}</h2>
          <p>{venue.Description}</p>
          <p class="meta">
            <strong>City:</strong> {venue.City ?? ''}<br />
            <strong>Area:</strong> {venue.Area ?? ''}<br />
            <strong>Category:</strong> {venue.Category}
          </p>

          {venue["When to Go"] && (
            <p class="when-to-go"><strong>When to Go:</strong> {venue["When to Go"]}</p>
          )}

          <p class="cost">üí∞ Cost: {venue.Cost}</p>
          <div class="links">
            {venue.Website && <a href={venue.Website} target="_blank">Website</a>}
            {venue["Google Maps URL"] && <a href={venue["Google Maps URL"]} target="_blank">Map</a>}
          </div>
        </div>
      ))}
    </div>



<script type="module">
  const searchInput = document.getElementById("searchInput");
  const cards = document.querySelectorAll(".card");

  const categoryButtons = document.querySelectorAll(".category-btn");
  const vibeButtons = document.querySelectorAll(".vibe-btn");
  const audienceButtons = document.querySelectorAll(".audience-btn");
  const atmosphereButtons = document.querySelectorAll(".atmosphere-btn");
  const whenButtons = document.querySelectorAll(".when-btn");

  let selectedCategories = [];
  let selectedVibes = [];
  let selectedAudience = [];
  let selectedAtmosphere = [];
  let selectedWhen = [];

  function filterCards() {
    const searchQuery = searchInput.value.toLowerCase();

    cards.forEach((card) => {
      const text = card.textContent.toLowerCase();
      const category = card.dataset.category;
      const vibes = card.dataset.vibes;
      const audience = card.dataset.audience;
      const atmosphere = card.dataset.atmosphere;
      const when = card.dataset.whentogo;

      const matchesSearch = text.includes(searchQuery);
      const matchesCategory = selectedCategories.length === 0 || selectedCategories.some(tag => category.includes(tag.toLowerCase()));
      const matchesVibes = selectedVibes.length === 0 || selectedVibes.some(tag => vibes.includes(tag.toLowerCase()));
      const matchesAudience = selectedAudience.length === 0 || selectedAudience.some(tag => audience.includes(tag.toLowerCase()));
      const matchesAtmosphere = selectedAtmosphere.length === 0 || selectedAtmosphere.some(tag => atmosphere.includes(tag.toLowerCase()));
      const matchesWhen = selectedWhen.length === 0 || selectedWhen.some(tag => when.includes(tag.toLowerCase()));

      const showCard = matchesSearch && matchesCategory && matchesVibes && matchesAudience && matchesAtmosphere && matchesWhen;
      card.style.display = showCard ? "block" : "none";
    });
  }

  function setupButtonFilters(buttons, selectedArray) {
    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const tag = btn.dataset.tag;
        const index = selectedArray.indexOf(tag);

        if (index > -1) {
          selectedArray.splice(index, 1);
          btn.style.background = "#eee";
          btn.style.color = "#000";
          btn.style.borderColor = "#ccc";
        } else {
          selectedArray.push(tag);
          btn.style.background = "#333";
          btn.style.color = "#fff";
          btn.style.borderColor = "#333";
        }

        filterCards();
      });
    });
  }

  searchInput.addEventListener("input", filterCards);
  setupButtonFilters(categoryButtons, selectedCategories);
  setupButtonFilters(vibeButtons, selectedVibes);
  setupButtonFilters(audienceButtons, selectedAudience);
  setupButtonFilters(atmosphereButtons, selectedAtmosphere);
  setupButtonFilters(whenButtons, selectedWhen);
</script>


<!-- ‚úçÔ∏è Suggest an Edit + Submit a Venue Buttons -->
<div style="margin-top: 3rem; text-align: center; display: flex; justify-content: center; gap: 1rem; flex-wrap: wrap;">
  <a 
    href="https://form.typeform.com/to/rs9RZozE" 
    target="_blank" 
    style="
      display: inline-block;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      background-color: #524776;
      color: white;
      text-decoration: none;
      border-radius: 25px;
      font-weight: bold;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
      transition: background-color 0.3s ease;
    "
    onmouseover="this.style.backgroundColor='#3f3861'"
    onmouseout="this.style.backgroundColor='#524776'"
  >
    ‚ûï Suggest an Edit
  </a>

  <a 
    href="https://form.typeform.com/to/yLG4QA9L" 
    target="_blank" 
    style="
      display: inline-block;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      background-color: #524776;
      color: white;
      text-decoration: none;
      border-radius: 25px;
      font-weight: bold;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
      transition: background-color 0.3s ease;
    "
    onmouseover="this.style.backgroundColor='#3f3861'"
    onmouseout="this.style.backgroundColor='#524776'"
  >
    üìç Submit a Venue
  </a>
</div>



    <footer style="margin-top: 4rem; padding: 2rem 1rem; text-align: center; font-size: 0.9rem; color: #555;">
      <a href="https://tiaross.net/w/wp-content/uploads/TiaRossDev.png" target="_blank">
        <img src="https://tiaross.net/w/wp-content/uploads/TiaRossDev-rs.png" alt="Tia Ross" style="width: 50px; height: 50px; border-radius: 50%; margin-top: 0.5rem;" />
      </a><br />üìç DFW Hotspots: No more ‚ÄòI don‚Äôt know where to go‚Äô nights.<br />
      By Tia Ross ‚Äì Explorer. Developer. Technocrat.
Let‚Äôs connect: <a href="https://tiaross.com/links/" target="_blank" style="color: #0077cc; text-decoration: none; font-weight: bold;">Explore My Links</a><br />
DM me: <a href="https://t.me/MsTRoss">MsTRoss</a>
      <span style="font-style: italic;"></span>
    </footer>
  </body>
</html>
