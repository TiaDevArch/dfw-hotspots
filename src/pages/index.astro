---
import venues from '../data/venues.json';
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>DFW Hotspot Vibes</title>
    <style>
      body {
        font-family: sans-serif;
        padding: 2rem;
        background: #f9f9f9;
      }
      h1 {
        text-align: center;
        color: #333;
      }
      .card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
      }
      .card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }
      .card h2 {
        margin: 0 0 0.5rem 0;
        font-size: 1.2rem;
        color: #222;
      }
      .meta {
        font-size: 0.9rem;
        color: #666;
      }
      .cost {
        font-weight: bold;
        margin-top: 0.5rem;
      }
      .links a {
        font-size: 0.85rem;
        margin-right: 10px;
        color: #0077cc;
        text-decoration: none;
      }
    </style>
  </head>
  <body>
    <h1>DFW Hotspots & Vibes</h1>

    <input
      type="text"
      id="searchInput"
      placeholder="Search venues, cities, categories..."
      style="width: 100%; padding: 0.75rem; font-size: 1rem; margin-top: 1rem; border-radius: 8px; border: 1px solid #ccc;"
    />

<h3>Filter by Vibe</h3>
    <!-- 🔖 Vibe Filters -->
    <div id="vibeFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Chill Vibes", "Grown & Sexy", "Lit", "Turn Up", "Romantic", "Classy", "Trendy", "Bougie", "Laid Back", "Date Night", "Black-Owned", "Networking"].map((tag) => (
        <button
          class="vibe-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>
<h3>Filter by Audience</h3>
    <!-- 👥 Audience Filters -->
    <div id="audienceFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Couples", "Singles", "Small Groups"].map((tag) => (
        <button
          class="audience-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>


<h3>Filter by Atmosphere</h3>
    <!-- 🎵 Atmosphere Filters -->
    <div id="atmosphereFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Live DJ", "Live Band", "Game Night", "Comedy", "Hookah", "Karaoke", "Patio", "Rooftop", "Outdoors", "Dancing"].map((tag) => (
        <button
          class="atmosphere-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>

    <!-- 🕒 When to Go Filters -->
    <div id="whenFilters" style="margin-top: 1rem; display: flex; flex-wrap: wrap; gap: 0.5rem;">
      {["Brunch", "Happy Hour", "Late Night", "Weekend", "Daytime", "Evening"].map((tag) => (
        <button
          class="when-btn"
          data-tag={tag}
          style="padding: 0.5rem 1rem; border-radius: 20px; border: 1px solid #ccc; background: #eee; cursor: pointer;"
        >
          {tag}
        </button>
      ))}
    </div>

    <div class="card-grid" id="venueList">
      {venues.map((venue, index) => (
        <div
          class="card"
          data-index={index}
          data-vibes={(venue.Vibe ?? "").toLowerCase()}
          data-audience={(venue.Audience ?? "").toLowerCase()}
          data-atmosphere={(venue.Atmosphere ?? "").toLowerCase()}
          data-when={(venue["When to Go"] ?? "").toLowerCase()}
        >
          <h2>{venue.Venue}</h2>
          <p>{venue.Description}</p>
          <p class="meta">
            <strong>City:</strong> {venue.City ?? ''}<br />
            <strong>Area:</strong> {venue.Area ?? ''}<br />
            <strong>Category:</strong> {venue.Category}
          </p>

          {venue["When to Go"] && (
            <p class="when-to-go"><strong>When to Go:</strong> {venue["When to Go"]}</p>
          )}

          <p class="cost">💰 Cost: {venue.Cost}</p>
          <div class="links">
            {venue.Website && <a href={venue.Website} target="_blank">Website</a>}
            {venue["Google Maps URL"] && <a href={venue["Google Maps URL"]} target="_blank">Map</a>}
          </div>
        </div>
      ))}
    </div>

    <script type="module">
      const searchInput = document.getElementById("searchInput");
      const cards = document.querySelectorAll(".card");

      const vibeButtons = document.querySelectorAll(".vibe-btn");
      const audienceButtons = document.querySelectorAll(".audience-btn");
      const atmosphereButtons = document.querySelectorAll(".atmosphere-btn");
      const whenButtons = document.querySelectorAll(".when-btn");

      let selectedVibes = [];
      let selectedAudience = [];
      let selectedAtmosphere = [];
      let selectedWhen = [];

      function filterCards() {
        const searchQuery = searchInput.value.toLowerCase();

        cards.forEach((card) => {
          const text = card.textContent.toLowerCase();
          const vibes = card.dataset.vibes;
          const audience = card.dataset.audience;
          const atmosphere = card.dataset.atmosphere;
          const when = card.dataset.when;

          const matchesSearch = text.includes(searchQuery);
          const matchesVibes = selectedVibes.length === 0 || selectedVibes.some(tag => vibes.includes(tag.toLowerCase()));
          const matchesAudience = selectedAudience.length === 0 || selectedAudience.some(tag => audience.includes(tag.toLowerCase()));
          const matchesAtmosphere = selectedAtmosphere.length === 0 || selectedAtmosphere.some(tag => atmosphere.includes(tag.toLowerCase()));
          const matchesWhen = selectedWhen.length === 0 || selectedWhen.some(tag => when.includes(tag.toLowerCase()));

          const showCard = matchesSearch && matchesVibes && matchesAudience && matchesAtmosphere && matchesWhen;
          card.style.display = showCard ? "block" : "none";
        });
      }

      function setupButtonFilters(buttons, selectedArray) {
        buttons.forEach((btn) => {
          btn.addEventListener("click", () => {
            const tag = btn.dataset.tag;
            const index = selectedArray.indexOf(tag);

            if (index > -1) {
              selectedArray.splice(index, 1);
              btn.style.background = "#eee";
              btn.style.color = "#000";
              btn.style.borderColor = "#ccc";
            } else {
              selectedArray.push(tag);
              btn.style.background = "#333";
              btn.style.color = "#fff";
              btn.style.borderColor = "#333";
            }

            filterCards();
          });
        });
      }

      searchInput.addEventListener("input", filterCards);
      setupButtonFilters(vibeButtons, selectedVibes);
      setupButtonFilters(audienceButtons, selectedAudience);
      setupButtonFilters(atmosphereButtons, selectedAtmosphere);
      setupButtonFilters(whenButtons, selectedWhen);
    </script>

<!-- ✍️ Submit a Venue Button -->
<div style="margin-top: 3rem; text-align: center;">
  <a 
    href="https://form.typeform.com/to/rs9RZozE" 
    target="_blank" 
    style="
      display: inline-block;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      background-color: #0077cc;
      color: white;
      text-decoration: none;
      border-radius: 25px;
      font-weight: bold;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
      transition: background-color 0.3s ease;
    "
    onmouseover="this.style.backgroundColor='#005fa3'"
    onmouseout="this.style.backgroundColor='#0077cc'"
  >
    ➕ Submit a Venue
  </a>
</div>


    <footer style="margin-top: 4rem; padding: 2rem 1rem; text-align: center; font-size: 0.9rem; color: #555;">
      <a href="https://tiaross.net/w/wp-content/uploads/TiaRossDev.png" target="_blank">
        <img src="https://tiaross.net/w/wp-content/uploads/TiaRossDev-rs.png" alt="Tia Ross" style="width: 50px; height: 50px; border-radius: 50%; margin-top: 0.5rem;" />
      </a><br />
      Built by <a href="https://tiaross.com/links/" target="_blank" style="color: #0077cc; text-decoration: none; font-weight: bold;">Tia</a><br />
      <span style="font-style: italic;">Technocrat. Explorer. Connector.</span>
    </footer>
  </body>
</html>
