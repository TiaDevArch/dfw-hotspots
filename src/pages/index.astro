---
import venues from '../data/venues.json';
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <title>DFW Hotspots & Events | Best Places to Go Out in Dallas-Fort Worth</title>
    <meta name="description" content="Explore the best restaurants, bars, lounges, brunch spots, and nightlife venues across Dallas-Fort Worth with curated vibes, audience, and atmospheres." />
    <meta name="keywords" content="Dallas nightlife, DFW hotspots, brunch in Dallas, date spots DFW, live music Dallas, black-owned venues Dallas, chill bars Fort Worth, where to go out in DFW" />
    <meta name="author" content="Tia Ross" />
    <meta property="og:title" content="DFW Hotspots & Events" />
    <meta property="og:description" content="Find your vibe in Dallas-Fort Worth â€” Brunch, date nights, happy hours, lounges, Black-owned gems and more." />
    <meta property="og:image" content="https://github.com/TiaDevArch/dfw-hotspots/blob/main/src/assets/Logo-DFWHotspots-s.png" />
    <meta property="og:url" content="https://dfwhotspots.netlify.app/" />
    <meta property="og:type" content="website" />
    <link rel="stylesheet" href="/styles.css" />
  </head>

  <body>
    <header>
      <h1>DFW Hotspots</h1>
      <input type="text" id="searchInput" placeholder="Search by name or keyword..." />
    </header>

    <section class="filters">
      <h3 onclick="toggleSection('categoryOptions', this)">Category <span class="arrow">â–¶</span></h3>
      <div id="categoryOptions" class="collapsed">
        <!-- buttons inserted by script -->
      </div>

      <h3 onclick="toggleSection('vibeOptions', this)">Vibe <span class="arrow">â–¶</span></h3>
      <div id="vibeOptions" class="collapsed"></div>

      <h3 onclick="toggleSection('audienceOptions', this)">Audience <span class="arrow">â–¶</span></h3>
      <div id="audienceOptions" class="collapsed"></div>

      <h3 onclick="toggleSection('atmosphereOptions', this)">Atmosphere <span class="arrow">â–¶</span></h3>
      <div id="atmosphereOptions" class="collapsed"></div>
    </section>

    <div id="cardContainer" class="cards">
      {venues.map((venue, index) => {
        return (
          <div class="card"
            data-index={index}
            data-vibes={(venue.Vibe ?? "").toLowerCase()}
            data-audience={(venue.Audience ?? "").toLowerCase()}
            data-atmosphere={(venue.Atmosphere ?? "").toLowerCase()}
            data-whentogo={(venue["When to Go"] ?? "").toLowerCase()}
            data-category={(venue.Category ?? "").toLowerCase()}
          >
            <h2>{venue.Venue}</h2>
            <p>{venue.Description}</p>
            <p class="meta">
              <strong>City:</strong> {venue.City ?? ''}<br />
              <strong>Area:</strong> {venue.Area ?? ''}<br />
              <strong>Category:</strong> {venue.Category}
            </p>

            {venue["When to Go"] && (
              <p class="meta">
                ðŸ•’ <strong>When to Go:</strong> {venue["When to Go"]}
              </p>
            )}

            <p class="cost">ðŸ’° Cost: {venue.Cost}</p>
            <div class="links">
              {venue.Website && <a href={venue.Website} target="_blank">Website</a>}
              {venue["Google Maps URL"] && <a href={venue["Google Maps URL"]} target="_blank">Map</a>}
            </div>
          </div>
        );
      })}
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const sections = ['categoryOptions', 'vibeOptions', 'audienceOptions', 'atmosphereOptions'];
        sections.forEach(id => {
          const el = document.getElementById(id);
          if (el) {
            el.classList.add('collapsed');
            el.classList.remove('expanded');
          }
        });
      });

      function toggleSection(sectionId, toggleElement) {
        const section = document.getElementById(sectionId);
        if (!section) return;

        const isCollapsed = section.classList.contains('collapsed');
        section.classList.toggle('collapsed', !isCollapsed);
        section.classList.toggle('expanded', isCollapsed);

        const arrow = toggleElement.querySelector('.arrow');
        if (arrow) {
          arrow.textContent = isCollapsed ? 'â–¼' : 'â–¶';
        }
      }
    </script>
    <script type="module" src="/scripts/filter.js"></script>
  </body>
</html>